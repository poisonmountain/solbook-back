name: Deploy to AWS EC2

on:
  push:
    branches:
      - main  # main 브랜치에 push할 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2  # 서울 리전 예시

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build --exclude-task test

      - name: Copy JAR to EC2
        run: |
          scp -i ${{ secrets.EC2_SSH_PRIVATE_KEY }} \
          build/libs/my-spring-boot-app.jar \
          ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/

      - name: Restart application on EC2
        run: |
          ssh -i ${{ secrets.EC2_SSH_PRIVATE_KEY }} ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          
          # MySQL 서비스 시작 및 설정 (EC2 내에서 실행)
          sudo systemctl start mysql
          mysql -u root -e "CREATE DATABASE IF NOT EXISTS solbook;"
          mysql -u root -e "CREATE USER IF NOT EXISTS 'solbook'@'localhost' IDENTIFIED BY '1234';"
          mysql -u root -e "GRANT ALL PRIVILEGES ON solbook.* TO 'solbook'@'localhost';"
          mysql -u root -e "FLUSH PRIVILEGES;"

          # 기존 애플리케이션 종료
          pkill -f 'java -jar' || true
          sleep 3
          
          # 기존 JAR 파일 삭제 후 새 파일로 교체
          rm -f /home/ubuntu/my-spring-boot-app.jar
          
          # 새로운 애플리케이션 실행
          nohup java -jar /home/ubuntu/my-spring-boot-app.jar > app.log 2>&1 &

          EOF

